[{"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\index.js":"1","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\App.js":"2","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\Register.js":"3","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\AuthContext.js":"4","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\Recipes.js":"5","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\Logout.js":"6","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\Login.js":"7","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\Forum.js":"8","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\RecipeDetailPage.js":"9","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\LandingPage.js":"10","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UserCocktailCreationPage.js":"11","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\SuccessfulRegistration.js":"12","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UserCreatedCocktailDetailPage.js":"13","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\AdminCocktailCreation.js":"14","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\Profile.js":"15","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\CreatingForumPost.js":"16","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\SuccessfulPasswordChange.js":"17","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\ForumPostContentPage.js":"18","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UpdatingBaseCocktail.js":"19","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UpdateThreadPost.js":"20","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UpdateMainThreadPost.js":"21","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UpdatingUserCreatedCocktail.js":"22","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\FilterListGroup.js":"23","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UserCreatedCocktailCard.js":"24","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\CocktailCard.js":"25","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\NavbarComponent.js":"26","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\Footer.js":"27","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\PasswordChangeForm.js":"28","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\MetricsPage.js":"29","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UserDetailPage.js":"30","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\data\\filterLists.js":"31","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\data\\data.js":"32","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\BarGraph.js":"33","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UpdateBanner.js":"34"},{"size":246,"mtime":1697642165653,"results":"35","hashOfConfig":"36"},{"size":3871,"mtime":1698092145511,"results":"37","hashOfConfig":"36"},{"size":3783,"mtime":1698092145520,"results":"38","hashOfConfig":"36"},{"size":2370,"mtime":1697642165639,"results":"39","hashOfConfig":"36"},{"size":13515,"mtime":1698092145519,"results":"40","hashOfConfig":"36"},{"size":868,"mtime":1697642165643,"results":"41","hashOfConfig":"36"},{"size":3776,"mtime":1698092145516,"results":"42","hashOfConfig":"36"},{"size":7971,"mtime":1697642165641,"results":"43","hashOfConfig":"36"},{"size":9948,"mtime":1698092145518,"results":"44","hashOfConfig":"36"},{"size":3960,"mtime":1698092145515,"results":"45","hashOfConfig":"36"},{"size":9614,"mtime":1698092145532,"results":"46","hashOfConfig":"36"},{"size":939,"mtime":1697642165647,"results":"47","hashOfConfig":"36"},{"size":12598,"mtime":1698092145537,"results":"48","hashOfConfig":"36"},{"size":10652,"mtime":1698092145513,"results":"49","hashOfConfig":"36"},{"size":2487,"mtime":1697642165645,"results":"50","hashOfConfig":"36"},{"size":3063,"mtime":1697642165640,"results":"51","hashOfConfig":"36"},{"size":931,"mtime":1697642165647,"results":"52","hashOfConfig":"36"},{"size":6248,"mtime":1697642165642,"results":"53","hashOfConfig":"36"},{"size":7870,"mtime":1697642165648,"results":"54","hashOfConfig":"36"},{"size":1989,"mtime":1697642165648,"results":"55","hashOfConfig":"36"},{"size":2845,"mtime":1697642165647,"results":"56","hashOfConfig":"36"},{"size":9156,"mtime":1697642165649,"results":"57","hashOfConfig":"36"},{"size":651,"mtime":1697642165641,"results":"58","hashOfConfig":"36"},{"size":1428,"mtime":1697642165650,"results":"59","hashOfConfig":"36"},{"size":1259,"mtime":1697642165639,"results":"60","hashOfConfig":"36"},{"size":2055,"mtime":1697642165644,"results":"61","hashOfConfig":"36"},{"size":251,"mtime":1697642165641,"results":"62","hashOfConfig":"36"},{"size":6155,"mtime":1697642165645,"results":"63","hashOfConfig":"36"},{"size":11980,"mtime":1697642165644,"results":"64","hashOfConfig":"36"},{"size":1635,"mtime":1697642165650,"results":"65","hashOfConfig":"36"},{"size":417,"mtime":1697642165652,"results":"66","hashOfConfig":"36"},{"size":221,"mtime":1697642165652,"results":"67","hashOfConfig":"36"},{"size":1887,"mtime":1697642165639,"results":"68","hashOfConfig":"36"},{"size":3522,"mtime":1698092145524,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"182eov5",{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\index.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\App.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\Register.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\AuthContext.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\Recipes.js",["176","177","178"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Col, Row, Pagination, Form, Button } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nimport config from \"../config.json\";\r\nimport NavbarComponent from \"./NavbarComponent\";\r\nimport CocktailCard from \"./CocktailCard\";\r\nimport UserCreatedCocktailCard from \"./UserCreatedCocktailCard\";\r\nimport FilterListGroup from \"./FilterListGroup\";\r\n\r\n// Import data to be used within this component\r\nimport {\r\n  alcoholFilters,\r\n  flavorFilters,\r\n  timeOfDayList,\r\n  userCreationList,\r\n  adminFilters,\r\n} from \"../data/filterLists\";\r\n\r\n// Importing images saved within the project\r\nimport EmptyBottle from \"../assets/empty.png\";\r\nimport WhiskeyBottle from \"../assets/whiskeybottle.jpg\";\r\nimport VodkaBottle from \"../assets/vodka.png\";\r\nimport BrandyBottle from \"../assets/brandy.png\";\r\nimport GinBottle from \"../assets/gin.png\";\r\nimport RumBottle from \"../assets/rum.png\";\r\nimport TequilaBottle from \"../assets/tequila.png\";\r\nimport PersonalBottle from \"../assets/personal.png\";\r\nimport AllCocktails from \"../assets/allcocktails.png\";\r\n\r\nfunction Recipes() {\r\n  const navigate = useNavigate();\r\n\r\n  // Variable that holds the logged in UserID and UserType\r\n  const { loggedInUserId, loggedInUserType } = useAuth();\r\n\r\n  // Array that holds the information of all the cocktails from the DB\r\n  const [cocktailData, setCocktailData] = useState([]);\r\n\r\n  // Array that holds the information of all the user cocktails from the DB\r\n  const [userCreatedCocktails, setUserCreatedCocktails] = useState([]);\r\n\r\n  // Array to hold the filtered cocktails depending on user's choice\r\n  const [filteredCocktails, setFilteredCocktails] = useState([]);\r\n\r\n  // Array to set the correct filtering types\r\n  const [activeFilters, setActiveFilters] = useState([]);\r\n\r\n  // Variable to hold the page pagination\r\n  const [page, setPage] = useState(1);\r\n\r\n  // Variable to hold the selected filter of user's choice\r\n  const [selectedFilter, setSelectedFilter] = useState(null);\r\n\r\n  // Variable t hold the input of search\r\n  const [searchFilter, setSearchFilter] = useState(\"\");\r\n\r\n  // Variable to set proper rendering of conditions\r\n  const [yourCreationsFilterActive, setYourCreationsFilterActive] =\r\n    useState(false);\r\n\r\n  // Variable to hold the images of alcohol types depending on user's filter choice\r\n  const [alcoholSideImage, setAlcoholSideImage] = useState(EmptyBottle);\r\n\r\n  // Variable that sets max cocktails per page to be rendered\r\n  const cocktailsPerPage = 9;\r\n\r\n  // Gets the last item index for the list\r\n  const indexOfLastCocktail = page * cocktailsPerPage;\r\n\r\n  // Gets the first item index from the list\r\n  const indexOfFirstCocktail = indexOfLastCocktail - cocktailsPerPage;\r\n\r\n  // Update to get the new rendered cocktails to be rendered on the screen\r\n  const currentCocktails =\r\n    filteredCocktails.length > 0\r\n      ? filteredCocktails.slice(\r\n          (page - 1) * cocktailsPerPage,\r\n          page * cocktailsPerPage\r\n        )\r\n      : cocktailData.slice(indexOfFirstCocktail, indexOfLastCocktail);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      axios\r\n        .get(`${config.AWS_URL}/recipes`)\r\n        .then((response) => {\r\n          setCocktailData(response.data.data);\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error fetching data:\", err);\r\n        });\r\n    } catch (err) {}\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (loggedInUserId) {\r\n        axios\r\n          .get(`${config.AWS_URL}/usercreatedcocktails/${loggedInUserId}`)\r\n          .then((response) => {\r\n            console.log(response.data.data);\r\n            setUserCreatedCocktails(response.data.data);\r\n          })\r\n          .catch((err) => {\r\n            console.error(\"Error fetching user-created cocktails:\", err);\r\n          });\r\n      }\r\n    } catch (err) {}\r\n  }, [loggedInUserId]);\r\n\r\n  /**\r\n   * Handles changes in the search input field\r\n   * @param {Event} e - The input field change event\r\n   */\r\n  const handleSearchChange = (e) => {\r\n    setSearchFilter(e.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the click event for the search button, filtering cocktails based on the search input\r\n   */\r\n  const handleSearchClick = () => {\r\n    const filtered = cocktailData.filter((cocktail) =>\r\n      cocktail.CocktailName.toLowerCase().includes(searchFilter.toLowerCase())\r\n    );\r\n    setFilteredCocktails(filtered);\r\n  };\r\n\r\n  /**\r\n   * Handles pagination clicks to switch between pages of cocktails\r\n   * @param {number} pageNumber - The page number to navigate to\r\n   */\r\n  const handlePaginationClick = (pageNumber) => {\r\n    setPage(pageNumber);\r\n  };\r\n\r\n  /**\r\n   * Handles filter clicks to filter cocktails based on selected filters\r\n   * @param {string} filter - The filter to apply to cocktails\r\n   */\r\n  const handleFilterClick = (filter) => {\r\n    if (filter === \"Your Creations\") {\r\n      if (yourCreationsFilterActive) {\r\n        setSelectedFilter(null);\r\n        setFilteredCocktails([]);\r\n        setYourCreationsFilterActive(false);\r\n        setAlcoholSideImage(EmptyBottle);\r\n      } else {\r\n        setSelectedFilter(filter);\r\n        setFilteredCocktails(userCreatedCocktails);\r\n        setYourCreationsFilterActive(true);\r\n        setAlcoholSideImage(PersonalBottle);\r\n      }\r\n    } else if (filter === \"All Creations\") {\r\n      if (selectedFilter === \"All Creations\") {\r\n        setSelectedFilter(null);\r\n        setFilteredCocktails([]);\r\n        setAlcoholSideImage(EmptyBottle);\r\n        setYourCreationsFilterActive(false);\r\n      } else {\r\n        setSelectedFilter(filter);\r\n\r\n        try {\r\n          axios\r\n            .get(`${config.AWS_URL}/allusercreatedcocktails`)\r\n            .then((response) => {\r\n              console.log(response.data.data);\r\n              setFilteredCocktails(response.data.data);\r\n              setPage(1);\r\n            })\r\n            .catch((err) => {\r\n              console.error(\"Error fetching all user-created cocktails:\", err);\r\n            });\r\n        } catch (err) {}\r\n\r\n        setAlcoholSideImage(AllCocktails);\r\n        setYourCreationsFilterActive(false);\r\n      }\r\n    } else {\r\n      let alcoholTypeId = 0;\r\n\r\n      switch (filter) {\r\n        case \"Vodka\":\r\n        case \"Sweet\":\r\n        case \"Dinner\":\r\n          alcoholTypeId = 1;\r\n          setAlcoholSideImage(VodkaBottle);\r\n          break;\r\n        case \"Whiskey\":\r\n        case \"Savoury\":\r\n        case \"Lubch\":\r\n          alcoholTypeId = 2;\r\n          setAlcoholSideImage(WhiskeyBottle);\r\n          break;\r\n        case \"Brandy\":\r\n        case \"Smokey\":\r\n        case \"Dinner\":\r\n          alcoholTypeId = 3;\r\n          setAlcoholSideImage(BrandyBottle);\r\n          break;\r\n        case \"Gin\":\r\n        case \"Sour\":\r\n        case \"Lunch\":\r\n          alcoholTypeId = 4;\r\n          setAlcoholSideImage(GinBottle);\r\n          break;\r\n        case \"Rum\":\r\n        case \"Spicy\":\r\n        case \"Brunch\":\r\n          alcoholTypeId = 5;\r\n          setAlcoholSideImage(RumBottle);\r\n          break;\r\n        case \"Tequila\":\r\n        case \"Savoury\":\r\n        case \"Brunch\":\r\n          alcoholTypeId = 6;\r\n          setAlcoholSideImage(TequilaBottle);\r\n          break;\r\n        default:\r\n          alcoholTypeId = 0;\r\n          setAlcoholSideImage(EmptyBottle);\r\n      }\r\n      setActiveFilters((prevFilters) =>\r\n        prevFilters.includes(filter)\r\n          ? prevFilters.filter((f) => f !== filter)\r\n          : [...prevFilters, filter]\r\n      );\r\n\r\n      if (selectedFilter === filter) {\r\n        setSelectedFilter(null);\r\n        setFilteredCocktails([]);\r\n        setAlcoholSideImage(EmptyBottle);\r\n      } else {\r\n        setSelectedFilter(filter);\r\n        const filtered = cocktailData.filter(\r\n          (cocktail) => cocktail.AlcoholTypeID === alcoholTypeId\r\n        );\r\n\r\n        setFilteredCocktails(filtered);\r\n        setPage(1);\r\n      }\r\n      setYourCreationsFilterActive(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles the click event for a cocktail image, navigating to the cocktail detail page\r\n   * @param {number} cocktailId - The ID of the clicked cocktail\r\n   */\r\n  const handleImageClick = (cocktailId) => {\r\n    navigate(`/recipedetailpage/${cocktailId}`);\r\n  };\r\n\r\n  /**\r\n   * Handles the click event for a usercreated cocktail image, navigating to the usercreated cocktail detail page\r\n   * @param {number} userCocktailID - The ID of the clicked usercreated cocktail\r\n   */\r\n  const handleUserImageClick = (userCocktailID) => {\r\n    navigate(`/usercreatedcocktaildetailpage/${userCocktailID}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavbarComponent />\r\n      <main>\r\n        <Container fluid className=\"image-with-text-container mb-4\"></Container>\r\n        <Container className=\"mt-4\">\r\n          <Row>\r\n            <Col md={2}>\r\n              <FilterListGroup\r\n                title=\"Alcohol Base\"\r\n                items={alcoholFilters}\r\n                selectedFilter={selectedFilter}\r\n                onItemClick={handleFilterClick}\r\n                activeFilters={activeFilters}\r\n              />\r\n              <FilterListGroup\r\n                title=\"Flavor Profile\"\r\n                items={flavorFilters}\r\n                selectedFilter={selectedFilter}\r\n                onItemClick={handleFilterClick}\r\n                activeFilters={activeFilters}\r\n              />\r\n              <FilterListGroup\r\n                title=\"Time Of Day\"\r\n                items={timeOfDayList}\r\n                selectedFilter={selectedFilter}\r\n                onItemClick={handleFilterClick}\r\n                activeFilters={activeFilters}\r\n              />\r\n              <FilterListGroup\r\n                title=\"User's Creations\"\r\n                items={\r\n                  loggedInUserType === \"A\" ? adminFilters : userCreationList\r\n                }\r\n                selectedFilter={selectedFilter}\r\n                onItemClick={(filter) => {\r\n                  if (\r\n                    filter === \"Create a Cocktail!\" &&\r\n                    loggedInUserType === \"G\"\r\n                  ) {\r\n                    navigate(`/usercreatingcocktail/${loggedInUserId}`);\r\n                  } else if (loggedInUserType === \"A\") {\r\n                    navigate(`/admincreatingcocktail`);\r\n                  } else {\r\n                    handleFilterClick(filter);\r\n                  }\r\n                }}\r\n                activeFilters={activeFilters}\r\n              />\r\n            </Col>\r\n            <Col md={8}>\r\n              <Row className=\"mb-3\">\r\n                <Col xs={8}>\r\n                  <Form>\r\n                    <Form.Group controlId=\"searchForm\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"All Categories\"\r\n                        value={searchFilter}\r\n                        onChange={handleSearchChange}\r\n                        className=\"w-100\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Col>\r\n                <Col xs={4}>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={handleSearchClick}\r\n                    id=\"searchButton\"\r\n                    className=\"w-100\"\r\n                  >\r\n                    Search\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                {(selectedFilter === \"Your Creations\" &&\r\n                  yourCreationsFilterActive) ||\r\n                selectedFilter === \"All Creations\"\r\n                  ? currentCocktails.map((cocktail, index) => (\r\n                      <UserCreatedCocktailCard\r\n                        key={index}\r\n                        imageSrc={cocktail.CocktailImage}\r\n                        onClick={() =>\r\n                          handleUserImageClick(cocktail.UserCocktailID)\r\n                        }\r\n                        cocktailName={cocktail.CocktailName}\r\n                        buttonText=\"View Details\"\r\n                        size={4}\r\n                      />\r\n                    ))\r\n                  : currentCocktails.map((cocktail, index) => (\r\n                      <CocktailCard\r\n                        key={index}\r\n                        imageSrc={cocktail.CocktailImage}\r\n                        onClick={() => handleImageClick(cocktail.CocktailID)}\r\n                        cocktailName={cocktail.CocktailName}\r\n                        buttonText=\"View Details\"\r\n                        size={4}\r\n                      />\r\n                    ))}\r\n              </Row>\r\n              <Pagination className=\"pagination justify-content-center mt-4\">\r\n                {Array.from(\r\n                  {\r\n                    length: Math.ceil(cocktailData.length / cocktailsPerPage),\r\n                  },\r\n                  (_, index) => (\r\n                    <Pagination.Item\r\n                      key={index}\r\n                      active={index + 1 === page}\r\n                      onClick={() => handlePaginationClick(index + 1)}\r\n                    >\r\n                      {index + 1}\r\n                    </Pagination.Item>\r\n                  )\r\n                )}\r\n              </Pagination>\r\n            </Col>\r\n            <Col md={2}>\r\n              <img src={alcoholSideImage} alt=\"\" />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Recipes;\r\n","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\Logout.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\Login.js",["179"],[],"import React, { useState } from \"react\";\r\nimport { Container, Row, Col, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nimport config from \"../config.json\";\r\nimport \"../styles/Login.css\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // Variable to check if the user has logged in\r\n  const { login } = useAuth();\r\n\r\n  // Variable to hold the UserName\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  // Variable to hold the password\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // Variable to hold the error message\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  /**\r\n   * Sends a POST request to the backend with the provided username and password,\r\n   * upon successful login stores user data in local storage.\r\n   * @param {Event} e - The form submission event\r\n   */\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${config.AWS_URL}/`,\r\n        {\r\n          username,\r\n          password,\r\n        },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const userInfo = response.data.data[0];\r\n      const user = userInfo[0];\r\n\r\n      login(user.UserName, user.UserId);\r\n      localStorage.setItem(\"username\", user.UserName);\r\n      localStorage.setItem(\"userId\", user.UserId);\r\n      localStorage.setItem(\"userType\", user.UserType);\r\n\r\n      navigate(\"/landingpage\");\r\n    } catch (error) {\r\n      setErrorMessage(\"Login failed. Please check your credentials.\");\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Navigates to the registration page when the button is clicked\r\n   */\r\n  const handleRegisterClick = () => {\r\n    navigate(\"/register\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"top-banner\">\r\n        <h1>Welcome to Night-In</h1>\r\n      </div>\r\n\r\n      <Container className=\"login-container\">\r\n        <Row className=\"justify-content-center\">\r\n          <Col md={6} className=\"login-form\">\r\n            <h2 className=\"text-center\">Login</h2>\r\n            <Form onSubmit={handleLogin}>\r\n              <Form.Group controlId=\"username\">\r\n                <Form.Label className=\"mt-3\">Username</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                  required\r\n                  className=\"centered-text-input\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label className=\"mt-3\">Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  required\r\n                  className=\"centered-text-input\"\r\n                />\r\n              </Form.Group>\r\n\r\n              {errorMessage && (\r\n                <Alert variant=\"danger\" className=\"mt-3\">\r\n                  {errorMessage}\r\n                </Alert>\r\n              )}\r\n\r\n              <Button variant=\"primary\" type=\"submit\" className=\"w-100\">\r\n                Sign in\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"secondary\"\r\n                type=\"button\"\r\n                className=\"w-100 mt-3\"\r\n                onClick={handleRegisterClick}\r\n              >\r\n                Register\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer className=\"sticky-footer\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\Forum.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\RecipeDetailPage.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\LandingPage.js",["180"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Container, Image, Col, Row, Form, Button } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nimport config from \"../config.json\";\r\nimport NavbarComponent from \"./NavbarComponent\";\r\nimport CocktailCard from \"./CocktailCard\";\r\nimport Footer from \"./Footer\";\r\nimport \"../styles/LandingPage.css\";\r\n\r\nfunction LandingPage() {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Variable to check the user type\r\n  const { loggedInUserType } = useAuth();\r\n\r\n  // Array to hold the cocktails being called from the DB\r\n  const [cocktailData, setCocktailData] = useState([]);\r\n\r\n  // Variable that holds the banner image  \r\n  const [imageFile, setImageFile] = useState(null);\r\n\r\n  // Variable that holds the banner text\r\n  const [bannerText, setBannerText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${config.AWS_URL}/recipes`)\r\n      .then((response) => {\r\n        setCocktailData(response.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching data:\", err);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`${config.AWS_URL}/updatedBannerImage`)\r\n      .then((response) => {\r\n        setImageFile(response.data.data[0].SiteBannerImage);\r\n        setBannerText(response.data.data[0].SiteBannerText);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching data:\", err);\r\n      });\r\n  }, []);\r\n\r\n  /**\r\n   * Handles the event to send the user to the detail page of the cocktail\r\n   * @param {number} cocktailId\r\n   */\r\n  const handleImageClick = (cocktailId) => {\r\n    navigate(`/recipedetailpage/${cocktailId}`);\r\n  };\r\n\r\n  /**\r\n   * Handles the navigation to updating banner page\r\n   */\r\n  const handleUpdateBanner = () => {\r\n    navigate(\"/updatebanner\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavbarComponent />\r\n      <Container fluid style={{ padding: 0 }} className=\"mb-4\">\r\n        <div className=\"image-with-text-container\">\r\n          <Image\r\n            src={`data:image/png;base64,${imageFile}`}\r\n            alt=\"Image with Text\"\r\n            fluid\r\n            className=\"full-width-image\"\r\n          />\r\n          <div className=\"overlay\">\r\n            <h1>{bannerText}</h1>\r\n          </div>\r\n        </div>\r\n        {loggedInUserType === \"A\" && (\r\n          <Col md={12} className=\"text-center\">\r\n            <Button onClick={handleUpdateBanner}>Update Banner</Button>\r\n          </Col>\r\n        )}\r\n      </Container>\r\n      <Container className=\"mb-4\">\r\n        <Row className=\"justify-content-between\">\r\n          <Col md={6}>\r\n            {cocktailData.length > 1 ? (\r\n              <CocktailCard\r\n                imageSrc={cocktailData[0].CocktailImage}\r\n                onClick={() => handleImageClick(cocktailData[0].CocktailID)}\r\n                cocktailName={cocktailData[0].CocktailName}\r\n                buttonText=\"View Details\"\r\n                size={6}\r\n              />\r\n            ) : null}\r\n          </Col>\r\n          <Col md={6}>\r\n            <h1 className=\"mb-3\">Most Searched Cocktail</h1>\r\n            <p>\r\n              {cocktailData.length > 1 ? cocktailData[0].Description : null}\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <Container>\r\n        <h1 className=\"text-center mb-4\">Other Cocktail Recipes!</h1>\r\n\r\n        <Row className=\"justify-content-between mb-4\">\r\n          {cocktailData.slice(1, 5).map((cocktail, index) => (\r\n            <CocktailCard\r\n              key={index}\r\n              imageSrc={cocktail.CocktailImage}\r\n              onClick={() => handleImageClick(cocktail.CocktailID)}\r\n              cocktailName={cocktail.CocktailName}\r\n              buttonText=\"View Details\"\r\n              size={3}\r\n            />\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LandingPage;","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UserCocktailCreationPage.js",["181"],[],"import React, { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { Container, Col, Row, Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport config from \"../config.json\";\r\nimport NavbarComponent from \"./NavbarComponent\";\r\nimport \"../styles/UserCocktailCreationPage.css\";\r\n\r\nconst UserCocktailCreationPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // Variable to hold the user's ID\r\n  const { userId } = useParams();\r\n\r\n  // Variable to hold the image file being uploaded\r\n  const [imageFile, setImageFile] = useState(null);\r\n\r\n  // Array to hold the list of ingredients for a cocktail\r\n  const [ingredientLines, setIngredientLines] = useState([]);\r\n\r\n  // Variable to add a new ingredient\r\n  const [newIngredient, setNewIngredient] = useState(\"\");\r\n\r\n  // Variable that holds the name of the cocktail\r\n  const [cocktailName, setCocktailName] = useState(\"\");\r\n\r\n  // Variable that holds the description of the cocktail\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  // Variable that holds the instructions of the cocktail\r\n  const [instructions, setInstructions] = useState(\"\");\r\n\r\n  // Variable that holds the error message\r\n  const [quantityError, setQuantityError] = useState(\"\");\r\n\r\n  /**\r\n   * Handles the change event when a file input for an image is selected\r\n   * @param {Event} e - Object representing the file input change\r\n   */\r\n  const handleFileInputChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setImageFile(file);\r\n  };\r\n\r\n  /**\r\n   * Handles the change event when a new ingredient is entered\r\n   * @param {Event} e  Object representing the input change\r\n   */\r\n  const handleNewIngredientChange = (e) => {\r\n    const ingredientText = e.target.value;\r\n    setNewIngredient(ingredientText);\r\n  };\r\n\r\n  /**\r\n   * Adds a new ingredient to the ingredient array\r\n   */\r\n  const addNewIngredient = () => {\r\n    if (newIngredient.trim() !== \"\") {\r\n      const [quantity] = newIngredient.split(\" \");\r\n\r\n      const quantityValue = parseFloat(quantity);\r\n\r\n      if (\r\n        isNaN(quantityValue) ||\r\n        quantityValue <= 0 ||\r\n        quantityValue % 1 !== 0\r\n      ) {\r\n        setQuantityError(\r\n          \"Please enter a valid positive integer for the quantity.\"\r\n        );\r\n      } else {\r\n        setIngredientLines([...ingredientLines, newIngredient]);\r\n        setNewIngredient(\"\");\r\n        setQuantityError(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Removes an ingredient from the ingredient array\r\n   * @param {number} index - The index of the ingredient to remove\r\n   */\r\n  const removeIngredient = (index) => {\r\n    const updatedIngredients = [...ingredientLines];\r\n    updatedIngredients.splice(index, 1);\r\n    setIngredientLines(updatedIngredients);\r\n  };\r\n\r\n  /**\r\n   * Handles the form submission by sending data to the backend\r\n   */\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const imageBase64 = await convertImageToBase64(imageFile);\r\n\r\n      const requestData = {\r\n        userId,\r\n        CocktailName: cocktailName,\r\n        Description: description,\r\n        Ingredients: ingredientLines,\r\n        Instructions: instructions,\r\n        CocktailImage: imageBase64,\r\n      };\r\n      \r\n      const response = await axios.post(\r\n        `${config.AWS_URL}/usercreatingcocktail/${userId}`,\r\n        requestData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      navigate(\"/recipes\");\r\n\r\n    } catch (error) {\r\n      console.error(\"Error sending data:\", error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Converts an image file to base64 format\r\n   * @param {File} imageFile - The image file to convert\r\n   * @returns {Promise<string|null>} A Promise that resolves to the base64-encoded image data or null if no file is provided\r\n   */\r\n  const convertImageToBase64 = (imageFile) => {\r\n    return new Promise((resolve, reject) => {\r\n      if (!imageFile) {\r\n        resolve(null);\r\n      } else {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n          const base64Data = reader.result.split(\",\")[1];\r\n          resolve(base64Data);\r\n        };\r\n        reader.onerror = reject;\r\n        reader.readAsDataURL(imageFile);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavbarComponent />\r\n      <Container className=\"mb-4 mt-4\">\r\n        <Row>\r\n          <Col md={6}>\r\n            <div className=\"image-container\">\r\n              {imageFile ? (\r\n                <img\r\n                  src={URL.createObjectURL(imageFile)}\r\n                  alt=\"Enter a file\"\r\n                  className=\"img-fluid\"\r\n                />\r\n              ) : (\r\n                <Form.Group controlId=\"formFile\" className=\"mb-0\">\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleFileInputChange}\r\n                    style={{ display: \"none\" }}\r\n                  />\r\n                  <Button\r\n                    variant=\"link\"\r\n                    style={{ fontSize: \"36px\" }}\r\n                    as=\"label\"\r\n                    htmlFor=\"formFile\"\r\n                  >\r\n                    +\r\n                  </Button>\r\n                  <p className=\"mt-2\">Click to select an image</p>\r\n                </Form.Group>\r\n              )}\r\n            </div>\r\n          </Col>\r\n          <Col md={6} className=\"mb-3\">\r\n            <Row>\r\n              <Col>\r\n                <h2 className=\"mb-4\">Enter a name for your Cocktail!</h2>\r\n                <Form.Group controlId=\"cocktailNameInput\" className=\"mb-4\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Cocktail Name\"\r\n                    value={cocktailName}\r\n                    onChange={(e) => setCocktailName(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <h3 className=\"mb-4\">Description</h3>\r\n                <Form.Group controlId=\"row1Textarea\" className=\"mb-4\">\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={5}\r\n                    placeholder=\"Describe your cocktail!\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <h3 className=\"mb-4\">Ingredients</h3>\r\n                <div className=\"ingredient-instruction\">\r\n                  <p style={{ fontSize: \"20px\" }}>\r\n                    Add an ingredient using this format:{\" \"}\r\n                    <span>Quantity Unit Ingredient</span>\r\n                  </p>\r\n                  <p className=\"text-muted\" style={{ fontSize: \"20px\" }}>\r\n                    For example:{\" \"}\r\n                    <span style={{ fontWeight: \"bold\" }}>\r\n                      \"1 oz Vodka\" or \"2 dashes Angostura Bitters\"\r\n                    </span>\r\n                  </p>\r\n                  {quantityError && (\r\n                    <p className=\"text-danger\">{quantityError}</p>\r\n                  )}\r\n                </div>\r\n                {ingredientLines.length > 0 ? (\r\n                  <ul>\r\n                    {ingredientLines.map((line, index) => (\r\n                      <li key={index}>\r\n                        {line}\r\n                        <Button\r\n                          variant=\"link\"\r\n                          className=\"remove-ingredient-button\"\r\n                          onClick={() => removeIngredient(index)}\r\n                        >\r\n                          Remove\r\n                        </Button>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                ) : (\r\n                  <p>No ingredients added yet.</p>\r\n                )}\r\n                <div className=\"d-flex align-items-center\">\r\n                  <Form.Group controlId=\"newIngredientInput\" className=\"mr-2\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Add a new ingredient\"\r\n                      value={newIngredient}\r\n                      onChange={handleNewIngredientChange}\r\n                    />\r\n                  </Form.Group>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    className=\"add-ingredient-button\"\r\n                    onClick={addNewIngredient}\r\n                  >\r\n                    Add Ingredient\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Col md={12}>\r\n        <Row>\r\n          <Col>\r\n            <h2 className=\"mb-4\">Instructions</h2>\r\n            <Form.Group controlId=\"instructionsTextarea\" className=\"mb-4\">\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={5}\r\n                placeholder=\"Enter instructions for making your cocktail!\"\r\n                value={instructions}\r\n                onChange={(e) => setInstructions(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Container className=\"text-center\">\r\n              <Button\r\n                variant=\"primary\"\r\n                size=\"lg\"\r\n                className=\"submit-button\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Submit Your Recipe\r\n              </Button>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserCocktailCreationPage;\r\n","C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\SuccessfulRegistration.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UserCreatedCocktailDetailPage.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\AdminCocktailCreation.js",["182"],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\Profile.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\CreatingForumPost.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\SuccessfulPasswordChange.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\ForumPostContentPage.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UpdatingBaseCocktail.js",["183"],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UpdateThreadPost.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UpdateMainThreadPost.js",["184"],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UpdatingUserCreatedCocktail.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\FilterListGroup.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UserCreatedCocktailCard.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\CocktailCard.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\NavbarComponent.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\Footer.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\PasswordChangeForm.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\MetricsPage.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UserDetailPage.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\data\\filterLists.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\data\\data.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\BarGraph.js",[],[],"C:\\Users\\ioter\\OneDrive\\Desktop\\projects\\night_in\\frontend\\src\\components\\UpdateBanner.js",[],[],{"ruleId":"185","severity":1,"message":"186","line":192,"column":9,"nodeType":"187","messageId":"188","endLine":195,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":209,"column":9,"nodeType":"187","messageId":"188","endLine":209,"endColumn":24},{"ruleId":"185","severity":1,"message":"186","line":210,"column":9,"nodeType":"187","messageId":"188","endLine":213,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":7,"column":8,"nodeType":"191","messageId":"192","endLine":7,"endColumn":14},{"ruleId":"189","severity":1,"message":"193","line":2,"column":38,"nodeType":"191","messageId":"192","endLine":2,"endColumn":42},{"ruleId":"189","severity":1,"message":"194","line":105,"column":13,"nodeType":"191","messageId":"192","endLine":105,"endColumn":21},{"ruleId":"189","severity":1,"message":"194","line":93,"column":13,"nodeType":"191","messageId":"192","endLine":93,"endColumn":21},{"ruleId":"189","severity":1,"message":"194","line":71,"column":13,"nodeType":"191","messageId":"192","endLine":71,"endColumn":21},{"ruleId":"189","severity":1,"message":"195","line":16,"column":10,"nodeType":"191","messageId":"192","endLine":16,"endColumn":14},"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'response' is assigned a value but never used.","'data' is assigned a value but never used."]