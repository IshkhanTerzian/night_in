{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ioter\\\\OneDrive\\\\Desktop\\\\projects\\\\night_in\\\\frontend\\\\src\\\\components\\\\UpdateMainThreadPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Container, Button, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport NavbarComponent from \"./NavbarComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UpdateMainThreadPost() {\n  _s();\n  const navigate = useNavigate();\n\n  // Variable to hold the forumPostID from the URL\n  const {\n    forumpostId\n  } = useParams();\n\n  // Variable that holds the data coming back from the DB for the specified thread\n  const [data, setData] = useState(null);\n\n  // Variable that holds the edited title of the thread\n  const [editedTopicTitle, setEditedTopicTitle] = useState(\"\");\n\n  // Variable that holds the edited content of the thread\n  const [editedContent, setEditedContent] = useState(\"\");\n  useEffect(() => {\n    axios.get(`http://localhost:3001/forumpostcontentpage/${forumpostId}`).then(response => {\n      if (response.data && response.data.length > 0) {\n        const postData = response.data[0];\n        setData(postData);\n        setEditedTopicTitle(postData.TopicTitle);\n        setEditedContent(postData.Content);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching forum post:\", error);\n    });\n  }, [forumpostId]);\n\n  /**\r\n   * Handles the event to update the main thread\r\n   */\n  const handleUpdateMainThread = () => {\n    axios.post(`http://localhost:3001/updateMainThreadPost/${forumpostId}`, {\n      TopicTitle: editedTopicTitle,\n      Content: editedContent\n    }).then(response => {\n      console.log(\"Content updated successfully:\", response.data);\n      navigate(`/forumpostcontentpage/${forumpostId}`);\n    }).catch(error => {\n      console.error(\"Error updating content:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Main Thread Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"topicTitle\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Topic Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: editedTopicTitle,\n            onChange: e => setEditedTopicTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: \"8\",\n            style: {\n              resize: \"none\"\n            },\n            value: editedContent,\n            onChange: e => setEditedContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleUpdateMainThread,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UpdateMainThreadPost, \"lMOJZawiZKT2vdKlY02bIM8jfz4=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = UpdateMainThreadPost;\nexport default UpdateMainThreadPost;\nvar _c;\n$RefreshReg$(_c, \"UpdateMainThreadPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Container","Button","Form","axios","NavbarComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateMainThreadPost","_s","navigate","forumpostId","data","setData","editedTopicTitle","setEditedTopicTitle","editedContent","setEditedContent","get","then","response","length","postData","TopicTitle","Content","catch","error","console","handleUpdateMainThread","post","log","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","type","value","onChange","e","target","as","rows","style","resize","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ioter/OneDrive/Desktop/projects/night_in/frontend/src/components/UpdateMainThreadPost.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { Container, Button, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport NavbarComponent from \"./NavbarComponent\";\r\n\r\nfunction UpdateMainThreadPost() {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Variable to hold the forumPostID from the URL\r\n  const { forumpostId } = useParams();\r\n\r\n  // Variable that holds the data coming back from the DB for the specified thread\r\n  const [data, setData] = useState(null);\r\n\r\n  // Variable that holds the edited title of the thread\r\n  const [editedTopicTitle, setEditedTopicTitle] = useState(\"\");\r\n  \r\n  // Variable that holds the edited content of the thread\r\n  const [editedContent, setEditedContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:3001/forumpostcontentpage/${forumpostId}`)\r\n      .then((response) => {\r\n        if (response.data && response.data.length > 0) {\r\n          const postData = response.data[0];\r\n          setData(postData);\r\n          setEditedTopicTitle(postData.TopicTitle);\r\n          setEditedContent(postData.Content);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching forum post:\", error);\r\n      });\r\n  }, [forumpostId]);\r\n\r\n  /**\r\n   * Handles the event to update the main thread\r\n   */\r\n  const handleUpdateMainThread = () => {\r\n    axios\r\n      .post(`http://localhost:3001/updateMainThreadPost/${forumpostId}`, {\r\n        TopicTitle: editedTopicTitle,\r\n        Content: editedContent,\r\n      })\r\n      .then((response) => {\r\n        console.log(\"Content updated successfully:\", response.data);\r\n\r\n        navigate(`/forumpostcontentpage/${forumpostId}`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating content:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavbarComponent />\r\n      <Container>\r\n        <h2>Edit Main Thread Post</h2>\r\n        <Form>\r\n          <Form.Group controlId=\"topicTitle\">\r\n            <Form.Label>Topic Title</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              value={editedTopicTitle}\r\n              onChange={(e) => setEditedTopicTitle(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"content\">\r\n            <Form.Label>Content</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"8\"\r\n              style={{ resize: \"none\" }}\r\n              value={editedContent}\r\n              onChange={(e) => setEditedContent(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" onClick={handleUpdateMainThread}>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateMainThreadPost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}