{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ioter\\\\OneDrive\\\\Desktop\\\\projects\\\\night_in\\\\frontend\\\\src\\\\components\\\\Recipes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Col, Row, Pagination, Form, Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"./AuthContext\";\nimport axios from \"axios\";\nimport config from \"../config.json\";\nimport NavbarComponent from \"./NavbarComponent\";\nimport CocktailCard from \"./CocktailCard\";\nimport UserCreatedCocktailCard from \"./UserCreatedCocktailCard\";\nimport FilterListGroup from \"./FilterListGroup\";\n\n// Import data to be used within this component\nimport { alcoholFilters, flavorFilters, timeOfDayList, userCreationList, adminFilters } from \"../data/filterLists\";\n\n// Importing images saved within the project\nimport EmptyBottle from \"../assets/empty.png\";\nimport WhiskeyBottle from \"../assets/whiskeybottle.jpg\";\nimport VodkaBottle from \"../assets/vodka.png\";\nimport BrandyBottle from \"../assets/brandy.png\";\nimport GinBottle from \"../assets/gin.png\";\nimport RumBottle from \"../assets/rum.png\";\nimport TequilaBottle from \"../assets/tequila.png\";\nimport PersonalBottle from \"../assets/personal.png\";\nimport AllCocktails from \"../assets/allcocktails.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Recipes() {\n  _s();\n  const navigate = useNavigate();\n\n  // Variable that holds the logged in UserID and UserType\n  const {\n    loggedInUserId,\n    loggedInUserType\n  } = useAuth();\n\n  // Array that holds the information of all the cocktails from the DB\n  const [cocktailData, setCocktailData] = useState([]);\n\n  // Array that holds the information of all the user cocktails from the DB\n  const [userCreatedCocktails, setUserCreatedCocktails] = useState([]);\n\n  // Array to hold the filtered cocktails depending on user's choice\n  const [filteredCocktails, setFilteredCocktails] = useState([]);\n\n  // Array to set the correct filtering types\n  const [activeFilters, setActiveFilters] = useState([]);\n\n  // Variable to hold the page pagination\n  const [page, setPage] = useState(1);\n\n  // Variable to hold the selected filter of user's choice\n  const [selectedFilter, setSelectedFilter] = useState(null);\n\n  // Variable t hold the input of search\n  const [searchFilter, setSearchFilter] = useState(\"\");\n\n  // Variable to set proper rendering of conditions\n  const [yourCreationsFilterActive, setYourCreationsFilterActive] = useState(false);\n\n  // Variable to hold the images of alcohol types depending on user's filter choice\n  const [alcoholSideImage, setalcoholSideImage] = useState(EmptyBottle);\n\n  // Variable that sets max cocktails per page to be rendered\n  const cocktailsPerPage = 9;\n\n  // Gets the last item index for the list\n  const indexOfLastCocktail = page * cocktailsPerPage;\n\n  // Gets the first item index from the list\n  const indexOfFirstCocktail = indexOfLastCocktail - cocktailsPerPage;\n\n  // Update to get the new rendered cocktails to be rendered on the screen\n  const currentCocktails = filteredCocktails.length > 0 ? filteredCocktails.slice((page - 1) * cocktailsPerPage, page * cocktailsPerPage) : cocktailData.slice(indexOfFirstCocktail, indexOfLastCocktail);\n  useEffect(() => {\n    try {\n      axios.get(`${config.LOCAL_URL}/recipes`).then(response => {\n        setCocktailData(response.data.data);\n      }).catch(err => {\n        console.error(\"Error fetching data:\", err);\n      });\n    } catch (err) {}\n  }, []);\n  useEffect(() => {\n    try {\n      if (loggedInUserId) {\n        axios.get(`${config.LOCAL_URL}/usercreatedcocktails/${loggedInUserId}`).then(response => {\n          console.log(response.data.data);\n          setUserCreatedCocktails(response.data.data);\n        }).catch(err => {\n          console.error(\"Error fetching user-created cocktails:\", err);\n        });\n      }\n    } catch (err) {}\n  }, [loggedInUserId]);\n\n  /**\r\n   * Handles changes in the search input field\r\n   * @param {Event} e - The input field change event\r\n   */\n  const handleSearchChange = e => {\n    setSearchFilter(e.target.value);\n  };\n\n  /**\r\n   * Handles the click event for the search button, filtering cocktails based on the search input\r\n   */\n  const handleSearchClick = () => {\n    const filtered = cocktailData.filter(cocktail => cocktail.CocktailName.toLowerCase().includes(searchFilter.toLowerCase()));\n    setFilteredCocktails(filtered);\n  };\n\n  /**\r\n   * Handles pagination clicks to switch between pages of cocktails\r\n   * @param {number} pageNumber - The page number to navigate to\r\n   */\n  const handlePaginationClick = pageNumber => {\n    setPage(pageNumber);\n  };\n\n  /**\r\n   * Handles filter clicks to filter cocktails based on selected filters\r\n   * @param {string} filter - The filter to apply to cocktails\r\n   */\n  const handleFilterClick = filter => {\n    if (filter === \"Your Creations\") {\n      if (yourCreationsFilterActive) {\n        setSelectedFilter(null);\n        setFilteredCocktails([]);\n        setYourCreationsFilterActive(false);\n        setalcoholSideImage(EmptyBottle);\n      } else {\n        setSelectedFilter(filter);\n        setFilteredCocktails(userCreatedCocktails);\n        setYourCreationsFilterActive(true);\n        setalcoholSideImage(PersonalBottle);\n      }\n    } else if (filter === \"All Creations\") {\n      if (selectedFilter === \"All Creations\") {\n        setSelectedFilter(null);\n        setFilteredCocktails([]);\n        setalcoholSideImage(EmptyBottle);\n        setYourCreationsFilterActive(false);\n      } else {\n        setSelectedFilter(filter);\n        try {\n          axios.get(`${config.LOCAL_URL}/allusercreatedcocktails`).then(response => {\n            console.log(response.data.data);\n            setFilteredCocktails(response.data.data);\n            setPage(1);\n          }).catch(err => {\n            console.error(\"Error fetching all user-created cocktails:\", err);\n          });\n        } catch (err) {}\n        setalcoholSideImage(AllCocktails);\n        setYourCreationsFilterActive(false);\n      }\n    } else {\n      let alcoholTypeId = 0;\n      switch (filter) {\n        case \"Vodka\":\n        case \"Sweet\":\n        case \"Dinner\":\n          alcoholTypeId = 1;\n          setalcoholSideImage(VodkaBottle);\n          break;\n        case \"Whiskey\":\n        case \"Savoury\":\n        case \"Lubch\":\n          alcoholTypeId = 2;\n          setalcoholSideImage(WhiskeyBottle);\n          break;\n        case \"Brandy\":\n        case \"Smokey\":\n        case \"Dinner\":\n          alcoholTypeId = 3;\n          setalcoholSideImage(BrandyBottle);\n          break;\n        case \"Gin\":\n        case \"Sour\":\n        case \"Lunch\":\n          alcoholTypeId = 4;\n          setalcoholSideImage(GinBottle);\n          break;\n        case \"Rum\":\n        case \"Spicy\":\n        case \"Brunch\":\n          alcoholTypeId = 5;\n          setalcoholSideImage(RumBottle);\n          break;\n        case \"Tequila\":\n        case \"Savoury\":\n        case \"Brunch\":\n          alcoholTypeId = 6;\n          setalcoholSideImage(TequilaBottle);\n          break;\n        default:\n          alcoholTypeId = 0;\n          setalcoholSideImage(EmptyBottle);\n      }\n      setActiveFilters(prevFilters => prevFilters.includes(filter) ? prevFilters.filter(f => f !== filter) : [...prevFilters, filter]);\n      if (selectedFilter === filter) {\n        setSelectedFilter(null);\n        setFilteredCocktails([]);\n        setalcoholSideImage(EmptyBottle);\n      } else {\n        setSelectedFilter(filter);\n        const filtered = cocktailData.filter(cocktail => cocktail.AlcoholTypeID === alcoholTypeId);\n        setFilteredCocktails(filtered);\n        setPage(1);\n      }\n      setYourCreationsFilterActive(false);\n    }\n  };\n\n  /**\r\n   * Handles the click event for a cocktail image, navigating to the cocktail detail page\r\n   * @param {number} cocktailId - The ID of the clicked cocktail\r\n   */\n  const handleImageClick = cocktailId => {\n    navigate(`/recipedetailpage/${cocktailId}`);\n  };\n\n  /**\r\n   * Handles the click event for a usercreated cocktail image, navigating to the usercreated cocktail detail page\r\n   * @param {number} userCocktailID - The ID of the clicked usercreated cocktail\r\n   */\n  const handleUserImageClick = userCocktailID => {\n    navigate(`/usercreatedcocktaildetailpage/${userCocktailID}`);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        className: \"image-with-text-container mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            children: [/*#__PURE__*/_jsxDEV(FilterListGroup, {\n              title: \"Alcohol Base\",\n              items: alcoholFilters,\n              selectedFilter: selectedFilter,\n              onItemClick: handleFilterClick,\n              activeFilters: activeFilters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FilterListGroup, {\n              title: \"Flavor Profile\",\n              items: flavorFilters,\n              selectedFilter: selectedFilter,\n              onItemClick: handleFilterClick,\n              activeFilters: activeFilters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FilterListGroup, {\n              title: \"Time Of Day\",\n              items: timeOfDayList,\n              selectedFilter: selectedFilter,\n              onItemClick: handleFilterClick,\n              activeFilters: activeFilters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FilterListGroup, {\n              title: \"User's Creations\",\n              items: loggedInUserType === \"A\" ? adminFilters : userCreationList,\n              selectedFilter: selectedFilter,\n              onItemClick: filter => {\n                if (filter === \"Create a Cocktail!\" && loggedInUserType === \"G\") {\n                  navigate(`/usercreatingcocktail/${loggedInUserId}`);\n                } else if (loggedInUserType === \"A\") {\n                  navigate(`/admincreatingcocktail`);\n                } else {\n                  handleFilterClick(filter);\n                }\n              },\n              activeFilters: activeFilters\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 8,\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xs: 8,\n                children: /*#__PURE__*/_jsxDEV(Form, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    controlId: \"searchForm\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"All Categories\",\n                      value: searchFilter,\n                      onChange: handleSearchChange,\n                      className: \"w-100\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 320,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"button\",\n                  onClick: handleSearchClick,\n                  id: \"searchButton\",\n                  className: \"w-100\",\n                  children: \"Search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: selectedFilter === \"Your Creations\" && yourCreationsFilterActive || selectedFilter === \"All Creations\" ? currentCocktails.map((cocktail, index) => /*#__PURE__*/_jsxDEV(UserCreatedCocktailCard, {\n                imageSrc: cocktail.CocktailImage,\n                onClick: () => handleUserImageClick(cocktail.UserCocktailID),\n                cocktailName: cocktail.CocktailName,\n                buttonText: \"View Details\",\n                size: 4\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 23\n              }, this)) : currentCocktails.map((cocktail, index) => /*#__PURE__*/_jsxDEV(CocktailCard, {\n                imageSrc: cocktail.CocktailImage,\n                onClick: () => handleImageClick(cocktail.CocktailID),\n                cocktailName: cocktail.CocktailName,\n                buttonText: \"View Details\",\n                size: 4\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n              className: \"pagination justify-content-center mt-4\",\n              children: Array.from({\n                length: Math.ceil(cocktailData.length / cocktailsPerPage)\n              }, (_, index) => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n                active: index + 1 === page,\n                onClick: () => handlePaginationClick(index + 1),\n                children: index + 1\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 2,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: alcoholSideImage,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Recipes, \"x3M7KdKCJqZ7d4T4Ai01Uef2i/U=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Recipes;\nexport default Recipes;\nvar _c;\n$RefreshReg$(_c, \"Recipes\");","map":{"version":3,"names":["React","useState","useEffect","Container","Col","Row","Pagination","Form","Button","useNavigate","useAuth","axios","config","NavbarComponent","CocktailCard","UserCreatedCocktailCard","FilterListGroup","alcoholFilters","flavorFilters","timeOfDayList","userCreationList","adminFilters","EmptyBottle","WhiskeyBottle","VodkaBottle","BrandyBottle","GinBottle","RumBottle","TequilaBottle","PersonalBottle","AllCocktails","jsxDEV","_jsxDEV","Fragment","_Fragment","Recipes","_s","navigate","loggedInUserId","loggedInUserType","cocktailData","setCocktailData","userCreatedCocktails","setUserCreatedCocktails","filteredCocktails","setFilteredCocktails","activeFilters","setActiveFilters","page","setPage","selectedFilter","setSelectedFilter","searchFilter","setSearchFilter","yourCreationsFilterActive","setYourCreationsFilterActive","alcoholSideImage","setalcoholSideImage","cocktailsPerPage","indexOfLastCocktail","indexOfFirstCocktail","currentCocktails","length","slice","get","LOCAL_URL","then","response","data","catch","err","console","error","log","handleSearchChange","e","target","value","handleSearchClick","filtered","filter","cocktail","CocktailName","toLowerCase","includes","handlePaginationClick","pageNumber","handleFilterClick","alcoholTypeId","prevFilters","f","AlcoholTypeID","handleImageClick","cocktailId","handleUserImageClick","userCocktailID","children","fileName","_jsxFileName","lineNumber","columnNumber","fluid","className","md","title","items","onItemClick","xs","Group","controlId","Control","type","placeholder","onChange","variant","onClick","id","map","index","imageSrc","CocktailImage","UserCocktailID","cocktailName","buttonText","size","CocktailID","Array","from","Math","ceil","_","Item","active","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/ioter/OneDrive/Desktop/projects/night_in/frontend/src/components/Recipes.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Container, Col, Row, Pagination, Form, Button } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nimport config from \"../config.json\";\r\nimport NavbarComponent from \"./NavbarComponent\";\r\nimport CocktailCard from \"./CocktailCard\";\r\nimport UserCreatedCocktailCard from \"./UserCreatedCocktailCard\";\r\nimport FilterListGroup from \"./FilterListGroup\";\r\n\r\n// Import data to be used within this component\r\nimport {\r\n  alcoholFilters,\r\n  flavorFilters,\r\n  timeOfDayList,\r\n  userCreationList,\r\n  adminFilters,\r\n} from \"../data/filterLists\";\r\n\r\n// Importing images saved within the project\r\nimport EmptyBottle from \"../assets/empty.png\";\r\nimport WhiskeyBottle from \"../assets/whiskeybottle.jpg\";\r\nimport VodkaBottle from \"../assets/vodka.png\";\r\nimport BrandyBottle from \"../assets/brandy.png\";\r\nimport GinBottle from \"../assets/gin.png\";\r\nimport RumBottle from \"../assets/rum.png\";\r\nimport TequilaBottle from \"../assets/tequila.png\";\r\nimport PersonalBottle from \"../assets/personal.png\";\r\nimport AllCocktails from \"../assets/allcocktails.png\";\r\n\r\nfunction Recipes() {\r\n  const navigate = useNavigate();\r\n\r\n  // Variable that holds the logged in UserID and UserType\r\n  const { loggedInUserId, loggedInUserType } = useAuth();\r\n\r\n  // Array that holds the information of all the cocktails from the DB\r\n  const [cocktailData, setCocktailData] = useState([]);\r\n\r\n  // Array that holds the information of all the user cocktails from the DB\r\n  const [userCreatedCocktails, setUserCreatedCocktails] = useState([]);\r\n\r\n  // Array to hold the filtered cocktails depending on user's choice\r\n  const [filteredCocktails, setFilteredCocktails] = useState([]);\r\n\r\n  // Array to set the correct filtering types\r\n  const [activeFilters, setActiveFilters] = useState([]);\r\n\r\n  // Variable to hold the page pagination\r\n  const [page, setPage] = useState(1);\r\n\r\n  // Variable to hold the selected filter of user's choice\r\n  const [selectedFilter, setSelectedFilter] = useState(null);\r\n\r\n  // Variable t hold the input of search\r\n  const [searchFilter, setSearchFilter] = useState(\"\");\r\n\r\n  // Variable to set proper rendering of conditions\r\n  const [yourCreationsFilterActive, setYourCreationsFilterActive] =\r\n    useState(false);\r\n\r\n  // Variable to hold the images of alcohol types depending on user's filter choice\r\n  const [alcoholSideImage, setalcoholSideImage] = useState(EmptyBottle);\r\n\r\n  // Variable that sets max cocktails per page to be rendered\r\n  const cocktailsPerPage = 9;\r\n\r\n  // Gets the last item index for the list\r\n  const indexOfLastCocktail = page * cocktailsPerPage;\r\n\r\n  // Gets the first item index from the list\r\n  const indexOfFirstCocktail = indexOfLastCocktail - cocktailsPerPage;\r\n\r\n  // Update to get the new rendered cocktails to be rendered on the screen\r\n  const currentCocktails =\r\n    filteredCocktails.length > 0\r\n      ? filteredCocktails.slice(\r\n          (page - 1) * cocktailsPerPage,\r\n          page * cocktailsPerPage\r\n        )\r\n      : cocktailData.slice(indexOfFirstCocktail, indexOfLastCocktail);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      axios\r\n        .get(`${config.LOCAL_URL}/recipes`)\r\n        .then((response) => {\r\n          setCocktailData(response.data.data);\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error fetching data:\", err);\r\n        });\r\n    } catch (err) {}\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (loggedInUserId) {\r\n        axios\r\n          .get(`${config.LOCAL_URL}/usercreatedcocktails/${loggedInUserId}`)\r\n          .then((response) => {\r\n            console.log(response.data.data);\r\n            setUserCreatedCocktails(response.data.data);\r\n          })\r\n          .catch((err) => {\r\n            console.error(\"Error fetching user-created cocktails:\", err);\r\n          });\r\n      }\r\n    } catch (err) {}\r\n  }, [loggedInUserId]);\r\n\r\n  /**\r\n   * Handles changes in the search input field\r\n   * @param {Event} e - The input field change event\r\n   */\r\n  const handleSearchChange = (e) => {\r\n    setSearchFilter(e.target.value);\r\n  };\r\n\r\n  /**\r\n   * Handles the click event for the search button, filtering cocktails based on the search input\r\n   */\r\n  const handleSearchClick = () => {\r\n    const filtered = cocktailData.filter((cocktail) =>\r\n      cocktail.CocktailName.toLowerCase().includes(searchFilter.toLowerCase())\r\n    );\r\n    setFilteredCocktails(filtered);\r\n  };\r\n\r\n  /**\r\n   * Handles pagination clicks to switch between pages of cocktails\r\n   * @param {number} pageNumber - The page number to navigate to\r\n   */\r\n  const handlePaginationClick = (pageNumber) => {\r\n    setPage(pageNumber);\r\n  };\r\n\r\n  /**\r\n   * Handles filter clicks to filter cocktails based on selected filters\r\n   * @param {string} filter - The filter to apply to cocktails\r\n   */\r\n  const handleFilterClick = (filter) => {\r\n    if (filter === \"Your Creations\") {\r\n      if (yourCreationsFilterActive) {\r\n        setSelectedFilter(null);\r\n        setFilteredCocktails([]);\r\n        setYourCreationsFilterActive(false);\r\n        setalcoholSideImage(EmptyBottle);\r\n      } else {\r\n        setSelectedFilter(filter);\r\n        setFilteredCocktails(userCreatedCocktails);\r\n        setYourCreationsFilterActive(true);\r\n        setalcoholSideImage(PersonalBottle);\r\n      }\r\n    } else if (filter === \"All Creations\") {\r\n      if (selectedFilter === \"All Creations\") {\r\n        setSelectedFilter(null);\r\n        setFilteredCocktails([]);\r\n        setalcoholSideImage(EmptyBottle);\r\n        setYourCreationsFilterActive(false);\r\n      } else {\r\n        setSelectedFilter(filter);\r\n\r\n        try {\r\n          axios\r\n            .get(`${config.LOCAL_URL}/allusercreatedcocktails`)\r\n            .then((response) => {\r\n              console.log(response.data.data);\r\n              setFilteredCocktails(response.data.data);\r\n              setPage(1);\r\n            })\r\n            .catch((err) => {\r\n              console.error(\"Error fetching all user-created cocktails:\", err);\r\n            });\r\n        } catch (err) {}\r\n\r\n        setalcoholSideImage(AllCocktails);\r\n        setYourCreationsFilterActive(false);\r\n      }\r\n    } else {\r\n      let alcoholTypeId = 0;\r\n\r\n      switch (filter) {\r\n        case \"Vodka\":\r\n        case \"Sweet\":\r\n        case \"Dinner\":\r\n          alcoholTypeId = 1;\r\n          setalcoholSideImage(VodkaBottle);\r\n          break;\r\n        case \"Whiskey\":\r\n        case \"Savoury\":\r\n        case \"Lubch\":\r\n          alcoholTypeId = 2;\r\n          setalcoholSideImage(WhiskeyBottle);\r\n          break;\r\n        case \"Brandy\":\r\n        case \"Smokey\":\r\n        case \"Dinner\":\r\n          alcoholTypeId = 3;\r\n          setalcoholSideImage(BrandyBottle);\r\n          break;\r\n        case \"Gin\":\r\n        case \"Sour\":\r\n        case \"Lunch\":\r\n          alcoholTypeId = 4;\r\n          setalcoholSideImage(GinBottle);\r\n          break;\r\n        case \"Rum\":\r\n        case \"Spicy\":\r\n        case \"Brunch\":\r\n          alcoholTypeId = 5;\r\n          setalcoholSideImage(RumBottle);\r\n          break;\r\n        case \"Tequila\":\r\n        case \"Savoury\":\r\n        case \"Brunch\":\r\n          alcoholTypeId = 6;\r\n          setalcoholSideImage(TequilaBottle);\r\n          break;\r\n        default:\r\n          alcoholTypeId = 0;\r\n          setalcoholSideImage(EmptyBottle);\r\n      }\r\n      setActiveFilters((prevFilters) =>\r\n        prevFilters.includes(filter)\r\n          ? prevFilters.filter((f) => f !== filter)\r\n          : [...prevFilters, filter]\r\n      );\r\n\r\n      if (selectedFilter === filter) {\r\n        setSelectedFilter(null);\r\n        setFilteredCocktails([]);\r\n        setalcoholSideImage(EmptyBottle);\r\n      } else {\r\n        setSelectedFilter(filter);\r\n        const filtered = cocktailData.filter(\r\n          (cocktail) => cocktail.AlcoholTypeID === alcoholTypeId\r\n        );\r\n\r\n        setFilteredCocktails(filtered);\r\n        setPage(1);\r\n      }\r\n      setYourCreationsFilterActive(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles the click event for a cocktail image, navigating to the cocktail detail page\r\n   * @param {number} cocktailId - The ID of the clicked cocktail\r\n   */\r\n  const handleImageClick = (cocktailId) => {\r\n    navigate(`/recipedetailpage/${cocktailId}`);\r\n  };\r\n\r\n  /**\r\n   * Handles the click event for a usercreated cocktail image, navigating to the usercreated cocktail detail page\r\n   * @param {number} userCocktailID - The ID of the clicked usercreated cocktail\r\n   */\r\n  const handleUserImageClick = (userCocktailID) => {\r\n    navigate(`/usercreatedcocktaildetailpage/${userCocktailID}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavbarComponent />\r\n      <main>\r\n        <Container fluid className=\"image-with-text-container mb-4\"></Container>\r\n        <Container className=\"mt-4\">\r\n          <Row>\r\n            <Col md={2}>\r\n              <FilterListGroup\r\n                title=\"Alcohol Base\"\r\n                items={alcoholFilters}\r\n                selectedFilter={selectedFilter}\r\n                onItemClick={handleFilterClick}\r\n                activeFilters={activeFilters}\r\n              />\r\n              <FilterListGroup\r\n                title=\"Flavor Profile\"\r\n                items={flavorFilters}\r\n                selectedFilter={selectedFilter}\r\n                onItemClick={handleFilterClick}\r\n                activeFilters={activeFilters}\r\n              />\r\n              <FilterListGroup\r\n                title=\"Time Of Day\"\r\n                items={timeOfDayList}\r\n                selectedFilter={selectedFilter}\r\n                onItemClick={handleFilterClick}\r\n                activeFilters={activeFilters}\r\n              />\r\n              <FilterListGroup\r\n                title=\"User's Creations\"\r\n                items={\r\n                  loggedInUserType === \"A\" ? adminFilters : userCreationList\r\n                }\r\n                selectedFilter={selectedFilter}\r\n                onItemClick={(filter) => {\r\n                  if (\r\n                    filter === \"Create a Cocktail!\" &&\r\n                    loggedInUserType === \"G\"\r\n                  ) {\r\n                    navigate(`/usercreatingcocktail/${loggedInUserId}`);\r\n                  } else if (loggedInUserType === \"A\") {\r\n                    navigate(`/admincreatingcocktail`);\r\n                  } else {\r\n                    handleFilterClick(filter);\r\n                  }\r\n                }}\r\n                activeFilters={activeFilters}\r\n              />\r\n            </Col>\r\n            <Col md={8}>\r\n              <Row className=\"mb-3\">\r\n                <Col xs={8}>\r\n                  <Form>\r\n                    <Form.Group controlId=\"searchForm\">\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"All Categories\"\r\n                        value={searchFilter}\r\n                        onChange={handleSearchChange}\r\n                        className=\"w-100\"\r\n                      />\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Col>\r\n                <Col xs={4}>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    type=\"button\"\r\n                    onClick={handleSearchClick}\r\n                    id=\"searchButton\"\r\n                    className=\"w-100\"\r\n                  >\r\n                    Search\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                {(selectedFilter === \"Your Creations\" &&\r\n                  yourCreationsFilterActive) ||\r\n                selectedFilter === \"All Creations\"\r\n                  ? currentCocktails.map((cocktail, index) => (\r\n                      <UserCreatedCocktailCard\r\n                        key={index}\r\n                        imageSrc={cocktail.CocktailImage}\r\n                        onClick={() =>\r\n                          handleUserImageClick(cocktail.UserCocktailID)\r\n                        }\r\n                        cocktailName={cocktail.CocktailName}\r\n                        buttonText=\"View Details\"\r\n                        size={4}\r\n                      />\r\n                    ))\r\n                  : currentCocktails.map((cocktail, index) => (\r\n                      <CocktailCard\r\n                        key={index}\r\n                        imageSrc={cocktail.CocktailImage}\r\n                        onClick={() => handleImageClick(cocktail.CocktailID)}\r\n                        cocktailName={cocktail.CocktailName}\r\n                        buttonText=\"View Details\"\r\n                        size={4}\r\n                      />\r\n                    ))}\r\n              </Row>\r\n              <Pagination className=\"pagination justify-content-center mt-4\">\r\n                {Array.from(\r\n                  {\r\n                    length: Math.ceil(cocktailData.length / cocktailsPerPage),\r\n                  },\r\n                  (_, index) => (\r\n                    <Pagination.Item\r\n                      key={index}\r\n                      active={index + 1 === page}\r\n                      onClick={() => handlePaginationClick(index + 1)}\r\n                    >\r\n                      {index + 1}\r\n                    </Pagination.Item>\r\n                  )\r\n                )}\r\n              </Pagination>\r\n            </Col>\r\n            <Col md={2}>\r\n              <img src={alcoholSideImage} alt=\"\" />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Recipes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}