{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ioter\\\\OneDrive\\\\Desktop\\\\projects\\\\night_in\\\\frontend\\\\src\\\\components\\\\UserCocktailCreationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Container, Col, Row, Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport config from \"../config.json\";\nimport NavbarComponent from \"./NavbarComponent\";\nimport \"../styles/UserCocktailCreationPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserCocktailCreationPage = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Variable to hold the user's ID\n  const {\n    userId\n  } = useParams();\n\n  // Variable to hold the image file being uploaded\n  const [imageFile, setImageFile] = useState(null);\n\n  // Array to hold the list of ingredients for a cocktail\n  const [ingredientLines, setIngredientLines] = useState([]);\n\n  // Variable to add a new ingredient\n  const [newIngredient, setNewIngredient] = useState(\"\");\n\n  // Variable that holds the name of the cocktail\n  const [cocktailName, setCocktailName] = useState(\"\");\n\n  // Variable that holds the description of the cocktail\n  const [description, setDescription] = useState(\"\");\n\n  // Variable that holds the instructions of the cocktail\n  const [instructions, setInstructions] = useState(\"\");\n\n  // Variable that holds the error message\n  const [quantityError, setQuantityError] = useState(\"\");\n\n  /**\r\n   * Handles the change event when a file input for an image is selected\r\n   * @param {Event} e - Object representing the file input change\r\n   */\n  const handleFileInputChange = e => {\n    const file = e.target.files[0];\n    setImageFile(file);\n  };\n\n  /**\r\n   * Handles the change event when a new ingredient is entered\r\n   * @param {Event} e  Object representing the input change\r\n   */\n  const handleNewIngredientChange = e => {\n    const ingredientText = e.target.value;\n    setNewIngredient(ingredientText);\n  };\n\n  /**\r\n   * Adds a new ingredient to the ingredient array\r\n   */\n  const addNewIngredient = () => {\n    if (newIngredient.trim() !== \"\") {\n      const [quantity] = newIngredient.split(\" \");\n      const quantityValue = parseFloat(quantity);\n      if (isNaN(quantityValue) || quantityValue <= 0 || quantityValue % 1 !== 0) {\n        setQuantityError(\"Please enter a valid positive integer for the quantity.\");\n      } else {\n        setIngredientLines([...ingredientLines, newIngredient]);\n        setNewIngredient(\"\");\n        setQuantityError(\"\");\n      }\n    }\n  };\n\n  /**\r\n   * Removes an ingredient from the ingredient array\r\n   * @param {number} index - The index of the ingredient to remove\r\n   */\n  const removeIngredient = index => {\n    const updatedIngredients = [...ingredientLines];\n    updatedIngredients.splice(index, 1);\n    setIngredientLines(updatedIngredients);\n  };\n\n  /**\r\n   * Handles the form submission by sending data to the backend\r\n   */\n  const handleSubmit = async () => {\n    try {\n      const imageBase64 = await convertImageToBase64(imageFile);\n      const requestData = {\n        userId,\n        CocktailName: cocktailName,\n        Description: description,\n        Ingredients: ingredientLines,\n        Instructions: instructions,\n        CocktailImage: imageBase64\n      };\n      const response = await axios.post(`${config.AWS_URL}/usercreatingcocktail/${userId}`, requestData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      navigate(\"/recipes\");\n    } catch (error) {\n      console.error(\"Error sending data:\", error);\n    }\n  };\n\n  /**\r\n   * Converts an image file to base64 format\r\n   * @param {File} imageFile - The image file to convert\r\n   * @returns {Promise<string|null>} A Promise that resolves to the base64-encoded image data or null if no file is provided\r\n   */\n  const convertImageToBase64 = imageFile => {\n    return new Promise((resolve, reject) => {\n      if (!imageFile) {\n        resolve(null);\n      } else {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          const base64Data = reader.result.split(\",\")[1];\n          resolve(base64Data);\n        };\n        reader.onerror = reject;\n        reader.readAsDataURL(imageFile);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mb-4 mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container\",\n            children: imageFile ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: URL.createObjectURL(imageFile),\n              alt: \"Enter a file\",\n              className: \"img-fluid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formFile\",\n              className: \"mb-0\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleFileInputChange,\n                style: {\n                  display: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                style: {\n                  fontSize: \"36px\"\n                },\n                as: \"label\",\n                htmlFor: \"formFile\",\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-2\",\n                children: \"Click to select an image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"mb-4\",\n                children: \"Enter a name for your Cocktail!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"cocktailNameInput\",\n                className: \"mb-4\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Cocktail Name\",\n                  value: cocktailName,\n                  onChange: e => setCocktailName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"mb-4\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"row1Textarea\",\n                className: \"mb-4\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  rows: 5,\n                  placeholder: \"Describe your cocktail!\",\n                  value: description,\n                  onChange: e => setDescription(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"mb-4\",\n                children: \"Ingredients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ingredient-instruction\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: \"20px\"\n                  },\n                  children: [\"Add an ingredient using this format:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Quantity Unit Ingredient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-muted\",\n                  style: {\n                    fontSize: \"20px\"\n                  },\n                  children: [\"For example:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontWeight: \"bold\"\n                    },\n                    children: \"\\\"1 oz Vodka\\\" or \\\"2 dashes Angostura Bitters\\\"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this), quantityError && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-danger\",\n                  children: quantityError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), ingredientLines.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: ingredientLines.map((line, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [line, /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    className: \"remove-ingredient-button\",\n                    onClick: () => removeIngredient(index),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No ingredients added yet.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"newIngredientInput\",\n                  className: \"mr-2\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Add a new ingredient\",\n                    value: newIngredient,\n                    onChange: handleNewIngredientChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  className: \"add-ingredient-button\",\n                  onClick: addNewIngredient,\n                  children: \"Add Ingredient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 12,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mb-4\",\n            children: \"Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"instructionsTextarea\",\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 5,\n              placeholder: \"Enter instructions for making your cocktail!\",\n              value: instructions,\n              onChange: e => setInstructions(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Container, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"lg\",\n              className: \"submit-button\",\n              onClick: handleSubmit,\n              children: \"Submit Your Recipe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(UserCocktailCreationPage, \"m3DHkc2df/eBrL+BcTsA858SQTo=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = UserCocktailCreationPage;\nexport default UserCocktailCreationPage;\nvar _c;\n$RefreshReg$(_c, \"UserCocktailCreationPage\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","Container","Col","Row","Form","Button","axios","config","NavbarComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","UserCocktailCreationPage","_s","navigate","userId","imageFile","setImageFile","ingredientLines","setIngredientLines","newIngredient","setNewIngredient","cocktailName","setCocktailName","description","setDescription","instructions","setInstructions","quantityError","setQuantityError","handleFileInputChange","e","file","target","files","handleNewIngredientChange","ingredientText","value","addNewIngredient","trim","quantity","split","quantityValue","parseFloat","isNaN","removeIngredient","index","updatedIngredients","splice","handleSubmit","imageBase64","convertImageToBase64","requestData","CocktailName","Description","Ingredients","Instructions","CocktailImage","response","post","AWS_URL","headers","error","console","Promise","resolve","reject","reader","FileReader","onloadend","base64Data","result","onerror","readAsDataURL","children","fileName","_jsxFileName","lineNumber","columnNumber","className","md","src","URL","createObjectURL","alt","Group","controlId","Control","type","accept","onChange","style","display","variant","fontSize","as","htmlFor","placeholder","rows","fontWeight","length","map","line","onClick","size","_c","$RefreshReg$"],"sources":["C:/Users/ioter/OneDrive/Desktop/projects/night_in/frontend/src/components/UserCocktailCreationPage.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { Container, Col, Row, Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport config from \"../config.json\";\r\nimport NavbarComponent from \"./NavbarComponent\";\r\nimport \"../styles/UserCocktailCreationPage.css\";\r\n\r\nconst UserCocktailCreationPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // Variable to hold the user's ID\r\n  const { userId } = useParams();\r\n\r\n  // Variable to hold the image file being uploaded\r\n  const [imageFile, setImageFile] = useState(null);\r\n\r\n  // Array to hold the list of ingredients for a cocktail\r\n  const [ingredientLines, setIngredientLines] = useState([]);\r\n\r\n  // Variable to add a new ingredient\r\n  const [newIngredient, setNewIngredient] = useState(\"\");\r\n\r\n  // Variable that holds the name of the cocktail\r\n  const [cocktailName, setCocktailName] = useState(\"\");\r\n\r\n  // Variable that holds the description of the cocktail\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  // Variable that holds the instructions of the cocktail\r\n  const [instructions, setInstructions] = useState(\"\");\r\n\r\n  // Variable that holds the error message\r\n  const [quantityError, setQuantityError] = useState(\"\");\r\n\r\n  /**\r\n   * Handles the change event when a file input for an image is selected\r\n   * @param {Event} e - Object representing the file input change\r\n   */\r\n  const handleFileInputChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setImageFile(file);\r\n  };\r\n\r\n  /**\r\n   * Handles the change event when a new ingredient is entered\r\n   * @param {Event} e  Object representing the input change\r\n   */\r\n  const handleNewIngredientChange = (e) => {\r\n    const ingredientText = e.target.value;\r\n    setNewIngredient(ingredientText);\r\n  };\r\n\r\n  /**\r\n   * Adds a new ingredient to the ingredient array\r\n   */\r\n  const addNewIngredient = () => {\r\n    if (newIngredient.trim() !== \"\") {\r\n      const [quantity] = newIngredient.split(\" \");\r\n\r\n      const quantityValue = parseFloat(quantity);\r\n\r\n      if (\r\n        isNaN(quantityValue) ||\r\n        quantityValue <= 0 ||\r\n        quantityValue % 1 !== 0\r\n      ) {\r\n        setQuantityError(\r\n          \"Please enter a valid positive integer for the quantity.\"\r\n        );\r\n      } else {\r\n        setIngredientLines([...ingredientLines, newIngredient]);\r\n        setNewIngredient(\"\");\r\n        setQuantityError(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Removes an ingredient from the ingredient array\r\n   * @param {number} index - The index of the ingredient to remove\r\n   */\r\n  const removeIngredient = (index) => {\r\n    const updatedIngredients = [...ingredientLines];\r\n    updatedIngredients.splice(index, 1);\r\n    setIngredientLines(updatedIngredients);\r\n  };\r\n\r\n  /**\r\n   * Handles the form submission by sending data to the backend\r\n   */\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const imageBase64 = await convertImageToBase64(imageFile);\r\n\r\n      const requestData = {\r\n        userId,\r\n        CocktailName: cocktailName,\r\n        Description: description,\r\n        Ingredients: ingredientLines,\r\n        Instructions: instructions,\r\n        CocktailImage: imageBase64,\r\n      };\r\n      \r\n      const response = await axios.post(\r\n        `${config.AWS_URL}/usercreatingcocktail/${userId}`,\r\n        requestData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      navigate(\"/recipes\");\r\n\r\n    } catch (error) {\r\n      console.error(\"Error sending data:\", error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Converts an image file to base64 format\r\n   * @param {File} imageFile - The image file to convert\r\n   * @returns {Promise<string|null>} A Promise that resolves to the base64-encoded image data or null if no file is provided\r\n   */\r\n  const convertImageToBase64 = (imageFile) => {\r\n    return new Promise((resolve, reject) => {\r\n      if (!imageFile) {\r\n        resolve(null);\r\n      } else {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n          const base64Data = reader.result.split(\",\")[1];\r\n          resolve(base64Data);\r\n        };\r\n        reader.onerror = reject;\r\n        reader.readAsDataURL(imageFile);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavbarComponent />\r\n      <Container className=\"mb-4 mt-4\">\r\n        <Row>\r\n          <Col md={6}>\r\n            <div className=\"image-container\">\r\n              {imageFile ? (\r\n                <img\r\n                  src={URL.createObjectURL(imageFile)}\r\n                  alt=\"Enter a file\"\r\n                  className=\"img-fluid\"\r\n                />\r\n              ) : (\r\n                <Form.Group controlId=\"formFile\" className=\"mb-0\">\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleFileInputChange}\r\n                    style={{ display: \"none\" }}\r\n                  />\r\n                  <Button\r\n                    variant=\"link\"\r\n                    style={{ fontSize: \"36px\" }}\r\n                    as=\"label\"\r\n                    htmlFor=\"formFile\"\r\n                  >\r\n                    +\r\n                  </Button>\r\n                  <p className=\"mt-2\">Click to select an image</p>\r\n                </Form.Group>\r\n              )}\r\n            </div>\r\n          </Col>\r\n          <Col md={6} className=\"mb-3\">\r\n            <Row>\r\n              <Col>\r\n                <h2 className=\"mb-4\">Enter a name for your Cocktail!</h2>\r\n                <Form.Group controlId=\"cocktailNameInput\" className=\"mb-4\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Cocktail Name\"\r\n                    value={cocktailName}\r\n                    onChange={(e) => setCocktailName(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <h3 className=\"mb-4\">Description</h3>\r\n                <Form.Group controlId=\"row1Textarea\" className=\"mb-4\">\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={5}\r\n                    placeholder=\"Describe your cocktail!\"\r\n                    value={description}\r\n                    onChange={(e) => setDescription(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <h3 className=\"mb-4\">Ingredients</h3>\r\n                <div className=\"ingredient-instruction\">\r\n                  <p style={{ fontSize: \"20px\" }}>\r\n                    Add an ingredient using this format:{\" \"}\r\n                    <span>Quantity Unit Ingredient</span>\r\n                  </p>\r\n                  <p className=\"text-muted\" style={{ fontSize: \"20px\" }}>\r\n                    For example:{\" \"}\r\n                    <span style={{ fontWeight: \"bold\" }}>\r\n                      \"1 oz Vodka\" or \"2 dashes Angostura Bitters\"\r\n                    </span>\r\n                  </p>\r\n                  {quantityError && (\r\n                    <p className=\"text-danger\">{quantityError}</p>\r\n                  )}\r\n                </div>\r\n                {ingredientLines.length > 0 ? (\r\n                  <ul>\r\n                    {ingredientLines.map((line, index) => (\r\n                      <li key={index}>\r\n                        {line}\r\n                        <Button\r\n                          variant=\"link\"\r\n                          className=\"remove-ingredient-button\"\r\n                          onClick={() => removeIngredient(index)}\r\n                        >\r\n                          Remove\r\n                        </Button>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                ) : (\r\n                  <p>No ingredients added yet.</p>\r\n                )}\r\n                <div className=\"d-flex align-items-center\">\r\n                  <Form.Group controlId=\"newIngredientInput\" className=\"mr-2\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Add a new ingredient\"\r\n                      value={newIngredient}\r\n                      onChange={handleNewIngredientChange}\r\n                    />\r\n                  </Form.Group>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    className=\"add-ingredient-button\"\r\n                    onClick={addNewIngredient}\r\n                  >\r\n                    Add Ingredient\r\n                  </Button>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Col md={12}>\r\n        <Row>\r\n          <Col>\r\n            <h2 className=\"mb-4\">Instructions</h2>\r\n            <Form.Group controlId=\"instructionsTextarea\" className=\"mb-4\">\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={5}\r\n                placeholder=\"Enter instructions for making your cocktail!\"\r\n                value={instructions}\r\n                onChange={(e) => setInstructions(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Container className=\"text-center\">\r\n              <Button\r\n                variant=\"primary\"\r\n                size=\"lg\"\r\n                className=\"submit-button\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Submit Your Recipe\r\n              </Button>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserCocktailCreationPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}