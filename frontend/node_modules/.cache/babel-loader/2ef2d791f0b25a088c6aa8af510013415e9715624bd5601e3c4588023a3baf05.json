{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ioter\\\\OneDrive\\\\Desktop\\\\projects\\\\night_in\\\\frontend\\\\src\\\\components\\\\UpdateThreadPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Container, Button, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport NavbarComponent from \"./NavbarComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UpdateMainThreadPost() {\n  _s();\n  const navigate = useNavigate();\n\n  // Variable that holds the threadID for the post\n  const {\n    threadID\n  } = useParams();\n\n  // Variable that holds the editable content\n  const [editedContent, setEditedContent] = useState(\"\");\n  useEffect(() => {\n    axios.get(`http://localhost:3001/getSingleThreadPost/${threadID}`).then(response => {\n      const data = response.data[0];\n      setEditedContent(data.Content);\n    }).catch(error => {\n      console.error(\"Error fetching forum post:\", error);\n    });\n  }, [threadID]);\n\n  /**\r\n   * Handles the update button press to send the new content\r\n   * to the be saved in the DB\r\n   */\n  const handleUpdateThread = () => {\n    axios.post(`http://localhost:3001/updatethreadpost/${threadID}`, {\n      Content: editedContent\n    }).then(response => {\n      navigate(`/forum`);\n    }).catch(error => {\n      console.error(\"Error updating content:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavbarComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Main Thread Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: \"8\",\n            style: {\n              resize: \"none\"\n            },\n            value: editedContent,\n            onChange: e => setEditedContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleUpdateThread,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UpdateMainThreadPost, \"cT1ye22Yj1C8aUdMkLJpaPrKYL8=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = UpdateMainThreadPost;\nexport default UpdateMainThreadPost;\nvar _c;\n$RefreshReg$(_c, \"UpdateMainThreadPost\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Container","Button","Form","axios","NavbarComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateMainThreadPost","_s","navigate","threadID","editedContent","setEditedContent","get","then","response","data","Content","catch","error","console","handleUpdateThread","post","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","as","rows","style","resize","value","onChange","e","target","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ioter/OneDrive/Desktop/projects/night_in/frontend/src/components/UpdateThreadPost.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { Container, Button, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport NavbarComponent from \"./NavbarComponent\";\r\n\r\nfunction UpdateMainThreadPost() {\r\n  const navigate = useNavigate();\r\n\r\n  // Variable that holds the threadID for the post\r\n  const { threadID } = useParams();\r\n\r\n  // Variable that holds the editable content\r\n  const [editedContent, setEditedContent] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:3001/getSingleThreadPost/${threadID}`)\r\n      .then((response) => {\r\n        const data = response.data[0];\r\n        setEditedContent(data.Content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching forum post:\", error);\r\n      });\r\n  }, [threadID]);\r\n\r\n  /**\r\n   * Handles the update button press to send the new content\r\n   * to the be saved in the DB\r\n   */\r\n  const handleUpdateThread = () => {\r\n    axios\r\n      .post(`http://localhost:3001/updatethreadpost/${threadID}`, {\r\n        Content: editedContent,\r\n      })\r\n      .then((response) => {\r\n        navigate(`/forum`);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating content:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavbarComponent />\r\n      <Container>\r\n        <h2>Edit Main Thread Post</h2>\r\n        <Form>\r\n          <Form.Group controlId=\"content\">\r\n            <Form.Label>Content</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"8\"\r\n              style={{ resize: \"none\" }}\r\n              value={editedContent}\r\n              onChange={(e) => setEditedContent(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" onClick={handleUpdateThread}>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateMainThreadPost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}